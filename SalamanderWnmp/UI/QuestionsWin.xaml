<myui:BaseWindow x:Class="SalamanderWnmp.UI.QuestionsWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prop="clr-namespace:SalamanderWnmp.Properties"
        xmlns:local="clr-namespace:SalamanderWnmp.UserClass"
        xmlns:myui="clr-namespace:WnmpUI;assembly=WnmpUI"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="{x:Static prop:Resources.CommonQuestions}" Height="600" Width="710">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>


        <!--标题栏-->
        <Grid x:Name="gridTitle" Background="{DynamicResource ThemeColor}" MouseDown="TitleBar_MouseMove">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{x:Static prop:Resources.CommonQuestions}" FontSize="13" FontWeight="Bold" Foreground="White" Margin="0,10" HorizontalAlignment="Left" Padding="10,0,0,0"/>
            <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                <Button x:Name="btnExit"  Width="20" Height="20" Margin="0" Style="{StaticResource ExitButton}" Click="btnClose_Click"/>
            </StackPanel>
        </Grid>

        <TabControl TabStripPlacement="Left" Grid.Row="1">
            <TabControl.Resources>
                <Style  TargetType="{x:Type ListItem}">
                    <Setter Property="Padding" Value="0, 8" />
                    <Setter Property="Paragraph.FontSize" Value="16" />
                </Style>
                <SolidColorBrush x:Key="RedTxt" Color="#c7254e"></SolidColorBrush>
            </TabControl.Resources>
            <TabItem Header="Nginx">
                <FlowDocument>
                    <List>
                        <ListItem>
                            <Paragraph>配置root时，用/，不要用\</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                Nginx配置PATHINFO：
                            </Paragraph>
                            <Paragraph>location ~ \.php {</Paragraph>
                            <Paragraph Padding="20, 0">
                                fastcgi_pass   127.0.0.1:9000;
                                <LineBreak/>
                                fastcgi_index  index.php;
                                <LineBreak/>
                                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
                                <LineBreak/>
                                fastcgi_split_path_info ^(.+\.php)(.*)$;
                                <LineBreak/>
                                fastcgi_param PATH_INFO $fastcgi_path_info;
                                <LineBreak/>
                                include        fastcgi_params;
                            </Paragraph>
                            <Paragraph>}</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                实现URL REWRITE：
                            </Paragraph>
                            <Paragraph>
                                location / {
                            </Paragraph>
                            <Paragraph Padding="20, 0">
                                try_files $uri $uri/ /index.php$is_args$args;
                            </Paragraph>
                            <Paragraph>
                                }
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </TabItem>
            <TabItem Header="PHP">
                <FlowDocument>
                    <Paragraph>
                        PHP7.0 x64需要MSVC14 (Visual C++ 2015)运行库支持，
                        <Hyperlink NavigateUri="https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x64.exe" RequestNavigate="Hyperlink_RequestNavigate">下载链接</Hyperlink>
                    </Paragraph>
                    <Paragraph>
                        PHP session原理：
                        <Hyperlink NavigateUri="http://ongd1spyv.bkt.clouddn.com/session.docx" RequestNavigate="Hyperlink_RequestNavigate">文档下载</Hyperlink>
                    </Paragraph>
                </FlowDocument>
            </TabItem>
            <TabItem Header="Mysql">
                <FlowDocument>
                    <Paragraph>
                        wnmp控制mysql是通过mysql服务的，在服务列表中，可以发现一个名为
                        <Bold Foreground="{StaticResource RedTxt}">mysql-salamander</Bold> 的服务（该服务在首次启动的时候会自动安装）
                    </Paragraph>
                    <Paragraph>
                        什么是
                        <Bold Foreground="{StaticResource RedTxt}">数据库分区</Bold>
                    </Paragraph>
                    <Paragraph>
                        以mysql为例。mysql数据库中的数据是以文件的形势存在磁盘上的，默认放在/mysql/data下面（可以通过my.cnf中的datadir来查看），一张表主要对应着三个文件，一个是frm存放表结构的，一个是myd存放表数据的，一个是myi存表索引的。如果一张表的数据量太大的话，那么myd,myi就会变的很大，查找数据就会变的很慢，这个时候我们可以利用mysql的分区功能，在物理上将这一张表对应的三个文件，分割成许多个小块，这样呢，我们查找一条数据时，就不用全部查找了，只要知道这条数据在哪一块，然后在那一块找就行了。如果表的数据太大，可能一个磁盘放不下，这个时候，我们可以把数据分配到不同的磁盘里面去。
                    </Paragraph>
                    <Paragraph>
                        分区的二种方式
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>横向分区</Paragraph>
                            <Paragraph>什么是横向分区呢？就是横着来分区了，举例来说明一下，假如有100W条数据，分成十份，前10W条数据放到第一个分区，第二个10W条数据放到第二个分区，依此类推。也就是把表分成了十分，根用merge来分表，有点像哦。取出一条数据的时候，这条数据包含了表结构中的所有字段，也就是说横向分区，并没有改变表的结构。</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>纵向分区</Paragraph>
                            <Paragraph>
                                什么是纵向分区呢？就是竖来分区了，举例来说明，在设计用户表的时候，开始的时候没有考虑好，而把个人的所有信息都放到了一张表里面去，这样这个表里面就会有比较大的字段，如个人简介，而这些简介呢，也许不会有好多人去看，所以等到有人要看的时候，在去查找，分表的时候，可以把这样的大字段，分开来。
                            </Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph>
                        Mysql水平分区类型
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>Range（范围）</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>List（预定义列表）</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Hash（哈希）</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Composite（复合模式）</Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph>
                        水平分区对性能的优化
                        <Hyperlink NavigateUri="http://blog.csdn.net/tjcyjd/article/details/11194489" RequestNavigate="Hyperlink_RequestNavigate">文章</Hyperlink>
                    </Paragraph>
                </FlowDocument>
            </TabItem>
            <TabItem Header="Composer">
                <FlowDocument>
                    <Paragraph>
                        Composer只是一段PHP脚本，所以可以手动配置而不借助于Composer-Setup.exe
                    </Paragraph>
                    <Paragraph>
                        手动安装Composer步骤：
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>
                                PHP目录添加进系统环境变量PATH里
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                下载
                                <Hyperlink NavigateUri="https://getcomposer.org/composer.phar" RequestNavigate="Hyperlink_RequestNavigate">composer.phar</Hyperlink> （就是php脚本），将文件放进PHP目录下，并且新建文本文件
                                <Bold>composer.cmd</Bold> 内容： <Bold Foreground="{StaticResource RedTxt}">@php "%~dp0composer.phar" %*</Bold>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                打开命令提示符输入 composer --version 查看 composer 版本，输出Composer版本表示配置正确
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                鉴于中国的网络环境，建议改写Packagist 镜像至国内镜像以加快下载速度<LineBreak/>
                                在命令提示符执行
                                <Bold Foreground="{StaticResource RedTxt}">composer config -g repo.packagist composer https://packagist.phpcomposer.com</Bold>
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </TabItem>
            <TabItem Header="Redis">
                <FlowDocument>
                    <Paragraph>
                        Redis持久化有两种方式：RDB快照和AOF日志
                    </Paragraph>
                    <Paragraph>
                        Redis和memcache的区别：
                        <Hyperlink NavigateUri="http://ongd1spyv.bkt.clouddn.com/Redis%20and%20Memcache.docx" RequestNavigate="Hyperlink_RequestNavigate">文档下载</Hyperlink>
                    </Paragraph>
                </FlowDocument>
            </TabItem>
        </TabControl>
    </Grid>
</myui:BaseWindow>
